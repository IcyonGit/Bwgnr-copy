What is output by the code to the right?
$
String stuff = "two three five seven";
String[] words = stuff.split("\\s+");
System.out.print( words.length );
$
1
$
0
$
2
$
7
$
4
$
E
$
What is output by the code to the right?
$
String start = "12.7 9.4 90";
String[] elems = start.split("\\s+");
double d;
d = Double.parseDouble( elems[1] );
System.out.print( d );
$
12.7
$
9.4
$
7.0
$
00.0
$
There is no output due to a
runtime error
$
B
$
What is output by the code to the right?
$
String times;
times = "7:48:1:09:08";
String[] pieces = times.split(":");
System.out.print( pieces[3] );
$
08
$
10
$
09
$
9
$
5
$
C
$
What is output by the code to the right?
$
String sample = "the_thirty_three";
String[] parts = sample.split("h");
System.out.print( parts.length );
$
0
$
3
$
4
$
t
$
e_t
$
C
$
What is output by the code to the right?
$
String names = "Bob Don J Tim";
String[] chopped = names.split("\\s+");
System.out.print( chopped.length );
$
2
$
4
$
5
$
There is no output due to syntax error.
$
There is no output due to an
ArrayIndexOutOfBoundsException.
$
B
$
What is output by the code to the right?
$
String garbage = "851..983gh:23(10";
String[] data = garbage.split("\\D+");
System.out.print( data[1] );
$
983
$
..
$
8
$
5
$
gh:
$
A
$
What is output by the code to the right?
$
String trash = "ham+can--putt*=cut";
String[] sp = trash.split("\\W+");
System.out.print( sp[2] );
$
*=
$
can
$
putt
$
-
$
There is no output.
$
C
$
What is output by the code to the right?
$
String messy;
messy = "6...56fg@71*&^14:";
String[] res = messy.split( "\\D+" );
System.out.print( res[3] );
$
:
$
71
$
7
$
14
$
*&^
$
D
$
What is the output by the code to the right?
$
String b4 = "10the13new26xfiles00fringe";
String[] chunks = b4.split("\\d+");
System.out.print(chunks.length);
$
3
$
4
$
1
$
5
$
0
$
D
$
What is the output by the code to the right?
$
String b4 = "P@55W()rded";
String[] broken = b4.split("\\W");
System.out.print(broken.length);
for(String s: broken)
  System.out.print(s);
$
5@()
$
4P55Wrded
$
3P55Wrded
$
1P@55W()rded
$
6PWrded
$
B
$
What is output by the code to the right?
$
String s = "al4?ph1z..lag?sauce";
String[] arr = s.split("[\\d]\\?");
System.out.println(arr.length);
$
1
$
2
$
3
$
5
$
19
$
B
$
What is output by the code to the right ?
$
String s="Now/is/the/time";
String[] t =s.split("[\\Wi]");
System.out.print( t.length );
$
6
$
4
$
2
$
3
$
1
$
A
$
What is output by the code to the right?
$
String s = "ALPHA*BETA*GAMMA";
String t[] = s.split("A*");
out.println(t.length + t[3]);
$
4MM
$
5MM
$
6TA*G
$
5*G
$
16P
$
E
$
What is output by the code to the right?
$
String good = "/long/neck/dinos";
String[] bigs = good.split("[//]");
System.out.println(bigs[3]);
$
long
$
neck
$
dinos
$
/
$
lnd
$
C
$
What is output by the code to the right?
$
String item = "Austin Texas";
boolean m = item.matches("A.*.*.s");
System.out.print( m );
$
false
$
true
$
0
$
There is no output due to 
a syntax error.
$
There is no output due to 
a runtime error.
$
B
$
What is output by the code to the right?
$
String s = "wearerthechamps";
out.print( s.matches( ".*ec.*" ) );
out.print(" ");
out.print( s.matches( ".*a.+p.*" ) );
$
true true
$
false false
$
true false
$
false true
$
true
$
A
$
What is output by the code to the right?
$
boolean p = "Hello".matches(".*");
boolean q = "Hello".matches("\\w+");
System.out.println("" + p + q);
$
truefalse
$
falsefalse
$
falsetrue
$
truetrue
$
There is no output due to
a syntax error.
$
D
$
What is output by the code to the right?
$
String s23 = "4";
System.out.print(s23.matches("\\d"));
System.out.print(s23.matches("\\D")); 
System.out.print(s23.matches("\\w"));
$
truefalsefalse
$
falsetruefalse
$
truefalsetrue
$
truetruetrue
$
falsefalsetrue
$
C
$
Which of the following could replace <*1> in
the code to the right so that tally would 
increase by one each time the if statement
was found true?
$
String x =
   "whipyoohakbyoohpubyakpybabhdak";
x=x.replaceAll("ooh","");
String[] list = x.split("[pub]");
String look = "yak";
Integer tally = new Integer(0);
for(String that : list)
    if(look.matches(that)) 
        <*1> 

out.println(tally); // 1
$
tally++;
$
tally = tally + 1;
$
tally = new Integer(tally.intValue()+1);
$
A and B only
$
A, B, and C
$
E
$
Assuming that <*1> is filled correctly,
what is output by the line marked //1 
in the client code to the right?
$
String x =
   "whipyoohakbyoohpubyakpybabhdak";
x=x.replaceAll("ooh","");
String[] list = x.split("[pub]");
String look = "yak";
Integer tally = new Integer(0);
for(String that : list)
    if(look.matches(that)) 
        <*1> 

out.println(tally); // 1
$
3
$
5
$
4
$
2
$
1
$
D