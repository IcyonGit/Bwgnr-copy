What is output by the code
to the right?
$
Queue<String> q = new LinkedList<String>();
q.add( "Z" );
q.add( "X" );
q.add( "Y" );
System.out.print( q.remove() );
$
X
$
Y
$
Z
$
ZY
$
YX
$
C
$
Which of the following can 
replace <*1> in the code to
the right so that the code
segment compiles without error?

 I.   Collection<Integer>
 II.  Object
 III. Queue<Integer>

$
<*1> tally = new LinkedList<Integer>();
$
I only
$
II only
$
III only
$
I,II,and III
$
None of the choices.
$
D
$
What is output by the code
to the right?
$
Queue<Integer> q;
q = new LinkedList<Integer>();

for(int i = 0; i < 10; i += 2)
  q.add(i);

for(int i = 0; i < q.size(); i++)
  System.out.print( q.remove() );
$
02468
$
0
$
10
$
0246810
$
024
$
E
$
What is output by the code
to the right?
$
// Assume Queue<E>
// is implemented correctly.
Queue<String> q1 = new Queue<String>();
Queue<String> q2 = new Queue<String>();
Queue<String> q3 = new Queue<String>();
String st = "BLUE";

for(int i = 0; i < st.length(); i++){
  int pos = st.length() - i - 1;
  q1.enqueue( st.substring(i, i+1 ) );
  q2.enqueue( st.substring(pos, pos+1) );
}

while( !q1.isEmpty() )
  q3.enqueue( q2.dequeue() +
    q1.dequeue() );

while( !q3.isEmpty() )
  System.out.print( q3.dequeue() );
$
EBULLUBE
$
BLUE
$
BELUULEB
$
BLUEBLUE
$
BLUEEULB
$
A
$
Assume the MyQueue class is 
implemented correctly and that
the dequeue() method returns 
the item being dequeued. What 
is output by the code to 
the right?
$
MyQueue<String> q = new MyQueue<String>;

q.enqueue("This");
q.enqueue("is");
q.enqueue("a test");

System.out.print(q.dequeue());
System.out.print(q.dequeue());
System.out.print(q.dequeue());
$
Thisisa test
$
a testisThis
$
Thisisatest
$
sihTsitset a
$
tset asisihT
$
A
